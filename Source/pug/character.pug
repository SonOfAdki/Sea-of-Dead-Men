-
	//- TODO REMOVE THESE OPTIONS
	const traumaData = {
		normal: ["cold", "haunted", "obsessed", "paranoid", "reckless", "soft", "unstable", "vicious"],
		//- ghost: ["chaotic", "destructive", "furious", "obsessive", "territorial", "savage"],
		//- hull: ["clanking", "leaking", "fixated", "smoking", "sparking", "unstable"],
		//- vampire: ["cold", "haunted", "obsessed", "paranoid", "ruthless", "secretive", "unstable", "vicious"]
	};
	//- const strictures = ["slumber", "forbidden", "repelled", "bestial", "bound"];

//- Left column
.left-column.grid
	//- Logo, Header text fields
	.header.grid.sheet-2col
		.bladeslogo
		label
			+text-input("crew")
			.label.text.title(data-i18n="crew")
		label
			+text-input("name")
			.label.text.title(data-i18n="name")
		label
			+text-input("alias")
			.label.text.title(data-i18n="alias")
		label.sheet-2col
			+text-input("look")
			.label.text.title(data-i18n="look")
		label
			+text-input("heritage")
			.label.text.title(data-i18n="heritage")
		label
			+text-input("background")
			.label.text.title(data-i18n="background")
		//- label
		//- 	+autoexpand("heritage")
		//- 	+hidden-input("heritage")(value="")
		//- 	.text
		//- 		span.label.title(data-i18n="heritage")
		//- 		//- span.uppercase.info(data-i18n="heritage_info")
		//- label
		//- 	+autoexpand("background")
		//- 	+hidden-input("background")(value="")
		//- 	.text
		//- 		span.label.title(data-i18n="background")
		//- 		//- span.uppercase.info(data-i18n="background_info")
		+hidden-input("setting_vice_type")(value="normal").vice-input
		label.vice.normal
			+autoexpand("vice_purveyor")
			+hidden-input("vice_purveyor")(value="")
			.text
				span.label.title(data-i18n="vice_purveyor")
				span.uppercase.info(data-i18n="vice_info")
			+roll("Vice", "{{subtitle=^{viceroll1}@{stress}&nbsp;@{setting_stress_label}^{viceroll2}}} {{type=vice}} {{title-vice=1}} {{title=^{vice}}} @{vice_formula} {{instructions=^{vice_instructions}}}")(data-i18n="indulge_vice").vicebutton.borderbutton
			+hidden-input("vice_formula")(value=zerodiceFormula)
		//- TODO CLEANUP
		//- .vice.ghost
		//- 	span.italic(data-i18n="ghost_viceblurb")
		//- .vice.hull
		//- 	label
		//- 		+text-input("hull_functions")(data-i18n-placeholder="choose_3_functions")
		//- 		+hidden-input("hull_functions")(value="")
		//- 		.text
		//- 			span.label.title(data-i18n="functions")
		//- 			span.uppercase.info(data-i18n="functions_info")
		//- 	span.italic(data-i18n="hull_viceblurb")
		//- .vice.vampire
		//- 	span.italic(data-i18n="vampire_viceblurb")
		//- 	+roll("Vice", "{{subtitle=^{viceroll1}@{stress}&nbsp;@{setting_stress_label}^{viceroll2}}} {{type=vice}} {{title-vice=1}} {{title=^{vice}}} @{vice_formula} {{instructions=^{vice_instructions}}}")(data-i18n="indulge_vice").vicebutton.borderbutton
	//- Stress and Trauma
	.stress.flex.sheet-2col
		//- Stress markers
		.stress1.blackheader
			.label
				span(name="attr_setting_stress_label")
		.stress2.blackborder.flex
			+radio("stress")(value="0", checked).tooth.zero
			each num in range(1,14)
				if (num > 8 && num < 14)
					+hidden-checkbox("setting_extra_stress")(value=num-9, checked=(num === 9)).extra-teeth
				+radio("stress")(value=num).tooth.stresstooth
		//- Trauma markers
		.stress3
			.blackheader
				.label
					span(name="attr_setting_trauma_label")
			.traumaholder.flex
				+radio("trauma")(value="0", checked).tooth.zero
				each num in range(1,5)
					if (num === 4)
						+hidden-checkbox("setting_extra_trauma")(value="0", checked).extra-teeth
					+radio("trauma")(value=num).tooth.regulartooth
		//- Individual traumata
		.stress4.blackborder
			+hidden-input("setting_traumata_set")(value="normal").input
			each traumas, category in traumaData
				div(class=category)
					.flex
						each trauma, i in traumas.slice(0, traumas.length / 2)
							label.text-button
								+checkbox(`trauma_${trauma}`)(data-i18n=trauma)
							if (i < traumas.length / 2 - 1)
								span â€”
					.flex
						each trauma, i in traumas.slice(traumas.length / 2)
							label.text-button
								+checkbox(`trauma_${trauma}`)(data-i18n=trauma)
							if (i < traumas.length / 2 - 1)
								span â€”
	//- Harm, Healing, Armor, Coin
	.harm-coin.grid.sheet-2col
		//- Harm
		.harm
			.blackheader
				.label(data-i18n="harm")
				button.broadcast-button(type="roll", name="roll_Harm", value="&{template:bitd-broadcast} {{charname=@{character_name}}} {{harm=1}} {{harm3=@{harm3}}} {{harm2_1=@{harm2_1}}} {{harm2_2=@{harm2_2}}} {{harm1_1=@{harm1_1}}} {{harm1_2=@{harm1_2}}} {{charimage=@{chat_image}}} @{title_text}", data-i18n-title="send_details_to_chat") :
			.harmbody
				.flex-center.harmnumber 3
				+textarea("harm3").twocols
				.flex-center.harmeffect(data-i18n="need_help")
				.flex-center.harmnumber 2
				+textarea("harm2_1")
				+textarea("harm2_2")
				.flex-center.harmeffect(data-i18n="minus1d")
				.flex-center.harmnumber 1
				+textarea("harm1_1")
				+textarea("harm1_2")
				.flex-center.harmeffect(data-i18n="less_effect")
		//- Healing
		.healing
			.blackheader
				+fortuneroll("Recovery", "{{type=resist}} {{short=short}} {{title-recovery=1}} {{title=^{recovery}}} {{subtitle=^{rolls_for}}}")(data-i18n="healing").label.rollbutton.inherit
			.col100.healing-progress(data-i18n="progress_clock", data-i18n-title="recoveryblurb")
			+hidden-input("recovery_max")(value="4").size
			.clock-container
				.spoke-0.all
				.spoke-90.all
				+radio("recovery")(value="0", checked).zero.input-progress
				each num in range(1,4)
					input.input-progress.all(type="radio", name="attr_recovery", value=num, data-i18n-title="recoveryblurb")
				.clock
		//- Armor
		.armor
			.blackheader
				.label(data-i18n="armor_uses")
			each val in ["armor", "+heavy", "special"]
				label
					+checkbox(val.replace("+", "")).checkbox.squarebox
					span.label(data-i18n=val)
		//- Coin and Stash
		.coin-and-stash
			//- Coin
			.coinrow.flex
				.coin.flex
					.label(data-i18n="coin")
					+radio("coin")(value="0", checked).zero
					each num in range(1,4)
						+radio("coin")(value=num).radiobox
				.stashbutton-holder
					+hidden-input("stash_formula")(value=zerodiceFormula)
					+roll("Stash", "{{type=resist}} {{short=short}} {{title-lifestyle=1}} {{title=^{lifestyle}}} {{subtitle=^{rolls}}} @{stash_formula}")(data-i18n="stash").rollbutton.label
			//- Stash
			.stash
				+radio("stash")(value="0", checked).zero
				each num in range(1,24)
					+radio("stash")(value=num).radiobox
					if (num % 8 === 0)
						br
	//- Special abilities
	.specialabilities.sheet-2col
		.specialheader.label.flex
			+text-input("special_abilities_title")(value="Special Abilities").inherit
		.greyholder
			fieldset.repeating_ability
				.specialability.flex
					button.broadcast-button(type="roll", name="roll_Show", value="&{template:bitd-broadcast} {{charname=@{character_name}}} {{type=^{special_ability}}} {{title=@{name}}} {{content=@{description}}} {{charimage=@{chat_image}}}", data-i18n-title="send_details_to_chat") :
					+checkbox("check").checkbox.circlebox
					+autoexpand("name")(data-i18n-placeholder="ability_name").abilityname.smallcaps
					+autoexpand("description")(data-i18n-placeholder="ability_description").abilitydesc
	//- Advancement
	.advancement.sheet-2col
		.advancement-header.flex.blackheader
			.label.markxp(data-i18n="mark_xp:")
			.label(data-i18n="playbook_advancement")
			.xpholder.flex
				+hidden-input("setting_vampirexp")(value="0").vampirexp //TODO remove vampire stuff
				+radio("playbook_xp")(value="0", checked).tooth.zero
				each num in range(1,10)
					if (num === 9)
						+hidden-input("setting_vampirexp")(value="0").toothhider
					+radio("playbook_xp")(value=num).tooth.xptooth
		ul.advancement-desc
			li(data-i18n="xp_desperate")
			li.nondot(data-i18n="xp_top")
			li
				+autoexpand("xp_condition")(data-i18n-placeholder="xp_specific")
			+hidden-input("setting_extra_xp")(value="0").hider
			li
				+autoexpand("xp_condition_extra")(data-i18n-placeholder="xp_specific_extra")
			li
				+autoexpand("xp_condition2") You expressed your beliefs, drives, heritage, or background.
			li
				+autoexpand("xp_condition3") You struggled with issues from your vice or traumas during the session.
	//- Planning and Load
	.planning.sheet-2col
		input.title-checkbox(type="checkbox", name="attr_show_planning", value="1", checked)
		span.label.plainheader(data-i18n="planning_load")
		.planning-content
			.planningdesc(data-i18n="planningdesc")
	.planning
		.teamworkbox
			span.bold(data-i18n="assault")
			span.italic(data-i18n="detail_assault")
		.teamworkbox
			span.bold(data-i18n="deception")
			span.italic(data-i18n="detail_deception")
		.teamworkbox
			span.bold(data-i18n="occult")
			span.italic(data-i18n="detail_occult")
	.planning
		.teamworkbox
			span.bold(data-i18n="transport")
			span.italic(data-i18n="detail_transport")
		.teamworkbox
			span.bold(data-i18n="stealth")
			span.italic(data-i18n="detail_stealth")
		.teamworkbox
			span.bold(data-i18n="social")
			span.italic(data-i18n="detail_social")
//- Right column
.right-column.grid
	//- Playbook
	.playbook.sheet-2col.flex
		+text-input("playbook")(data-i18n-placeholder="playbook").label
		+textarea("playbook_description")(data-i18n-placeholder="playbook_description").label
		+hidden-input("show_playbook_reminder")(value="1").hider
		.reminder
			span(data-i18n="autofill_reminder_playbook")
			br
			span(data-i18n="list_playbooks")
	//- Items and Planning
	.itemcolumn
		//- Load
		.loadheader.flex
			.label(data-i18n="load")
			each val in ["light", "normal", "heavy"]
				label
					+checkbox("load")(value=val).checkbox
					span.loadnumber(name=`attr_setting_load_${val[0]}`)
					span(data-i18n=val)
		.itemheader.small-margin.flex
			.label(data-i18n="items")
			span.italic(data-i18n="italics_dont_count")
			label.text-button
				+checkbox("reset_items")(data-i18n="reset?")
		//- Items
		.itemholder.items
			//- Playbook items
			.playbookitems.free-repcontrol
				fieldset.repeating_playbookitem
					+hidden-input("boxes_chosen")(value="0").boxes-chosen
					.item.numboxes-chooser
						div(data-i18n="how_much_load")
						+number-input("numboxes")(min="0", max="3", value="0")
						label
							+checkbox("bold")(data-i18n="bold")
						label
							+checkbox("boxes_chosen")(data-i18n="ok")
					.item
						+hidden-input("bold")(value="0").input-bold
						+hidden-input("numboxes")(value="0").numboxes
						+checkbox("check_1").checkbox.squarebox
						span.floatingbar.boxesgeq2
						+checkbox("check_2", "boxesgeq2").checkbox.squarebox
						span.floatingbar.boxesgeq3.boxesgeq2
						+checkbox("check_3", "boxesgeq2 boxesgeq3").checkbox.squarebox
						+autoexpand("name")(data-i18n-placeholder="item_name").itemname
					.item-description
						+checkbox(null).expand
						+textarea("description")(data-i18n-placeholder="description")
			//- Regular items
			.regularitems.free-repcontrol
				fieldset.repeating_item
					+hidden-input("short")(value="0").input-short
					+hidden-input("expand")(value="0").input-expand
					.item-container
						+hidden-input("boxes_chosen")(value="0").boxes-chosen
						.item.numboxes-chooser
							div(data-i18n="how_much_load")
							+number-input("numboxes")(min="0", max="3", value="0")
							label
								+checkbox("short")(data-i18n="short")
							label
								+checkbox("boxes_chosen")(data-i18n="ok")
						.item
							+hidden-input("numboxes")(value="0").numboxes
							+checkbox("check_1").checkbox.squarebox
							span.floatingbar.boxesgeq2
							+checkbox("check_2", "boxesgeq2").checkbox.squarebox
							span.floatingbar.boxesgeq3.boxesgeq2
							+checkbox("check_3", "boxesgeq2 boxesgeq3").checkbox.squarebox
							+text-input("name")(data-i18n-placeholder="item_name").itemname
						.item-description
							+checkbox("expand").expand
							+textarea("description")(data-i18n-placeholder="description")
		//- Teamwork
		.teamwork
			.plainheader.label(data-i18n="teamwork")
			.teamworkbox(data-i18n="assist_a_teammate")
			.teamworkbox(data-i18n="lead_a_group_action")
			.teamworkbox(data-i18n="protect_a_teammate")
			.teamworkbox(data-i18n="set_up_a_teammate")
	//- Action ratings
	.actioncolumn
		each actions, attribute in actionData
			.attribute
				.attribute-title.flex
					+roll(TitleCase(attribute),
						"{{type=resist}} {{subtitle=^{resists} @{consequence_query} ^{with}}} {{title-" + attribute + "=1}} " +
						"{{title=^{" + attribute + "}}} @{" + attribute + "_formula} {{instructions=^{resist_instructions}}} " +
						`@{${attribute}_roll_mods}`
					)(data-i18n-title=`${attribute}_description`).rollbutton.label
						span(data-i18n=attribute).default-label.inherit
						span(name=`attr_${attribute}_label`).custom-label.inherit
					+hidden-input(`${attribute}`)(value="0")
					+hidden-input(`${attribute}_formula`)(value=zerodiceFormula)
					+hidden-input(`${attribute}_xp_max`)(value="6")
					+hidden-input(`${attribute}_roll_mods`)(value="")
					.attribute-xp-box.flex
						+hidden-input("setting_vampirexp")(value="0").vampirexp
						+radio(`${attribute}_xp`)(value="0", checked).tooth.zero
						each num in range(1,8)
							if (num === 7)
								+hidden-input("setting_vampirexp")(value="0").toothhider
							+radio(`${attribute}_xp`)(value=num).tooth.xptooth
				.actions
					each action in actions
						.action.flex
							+hidden-input(`${action}_formula`)(value=zerodiceFormula)
							+hidden-input(`${action}_roll_mods`)(value="")
							+hidden-input(`setting_dark_talent_${attribute}`)(value="0").darktalent
							+hidden-checkbox(action)(value="0", checked).fakeradio
							+checkbox(action)(value="1").checkbox.circlebox.fakeradio
							.divider
							each num in range(2,5)
								+checkbox(action)(value=num).checkbox.circlebox.fakeradio
							+roll(TitleCase(action),
								"{{type=action}} {{subtitle=^{rolls}}} {{title-" + action + "=1}} {{title=^{" + action + "}}} " +
								`{{@{position_query}}} {{effect=@{effect_query}}} @{${action}_formula} @{${action}_roll_mods}`
							)(data-i18n-title=`${action}_description`).rollbutton.label
								span(data-i18n=action).default-label.inherit
								span(name=`attr_${action}_label`).custom-label.inherit
		//- Cohort
		+hidden-input("setting_show_cohort")(value="0").hider
		+makecohort("char_cohort_", true)
		//- Friends
		.friends
			.specialheader.label.flex
				+text-input("friends_title")(value="Friends").inherit
			.greyholder
				fieldset.repeating_friend
					.friend-contact.friend.flex
						+hidden-input("status")(value="0").friendstate
						label.up
							+checkbox("status")(value="up").checkbox
						label.down
							+checkbox("status")(value="down").checkbox
						+autoexpand("name")(data-i18n-placeholder="friend_name")
					+checkbox(null).expand
					+textarea("description")(data-i18n-placeholder="notes").description
		//- Roll Fortune
		+fortuneroll("Fortune", "{{type=fortune}} {{subtitle=^{rolls}}} {{title-fortune=1}} {{title=^{fortune}}}", true)(data-i18n="roll_fortune").fortunebutton.borderbutton
	//- Clocks
	.clocks.sheet-2col.free-repcontrol
		.specialheader.label(data-i18n="clocks")
		fieldset.repeating_clock
			+makeclock
	+textarea("notes")(data-i18n-placeholder="notes").notes.sheet-2col.small-margin
